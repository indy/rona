
* todo

  level loading/saving/editing

  different sprite types:
  - tiles/chunks (floors, walls)
  - animated entities (characters, flaming torches on the wall)
  - non-animated entities (holes, blocks)

  layering of sprites (quads), rendering in the correct order

  entity properties


* ui
  https://rxi.github.io/microui_v2_an_implementation_overview.html
  https://github.com/rxi/microui

* shaders
  crt:  https://www.shadertoy.com/view/4sf3Dr
  cathode: https://www.shadertoy.com/view/4lXcDH
  Atari Puzzle Game (Sokoban): https://www.shadertoy.com/view/4djyRD
  Simple CRT : https://www.shadertoy.com/view/MtdXWl

  1990-esque: https://www.shadertoy.com/view/MdyyWt
  really detailed, based on [[www.gamasutra.com/blogs/KylePittman/20150420/241442/CRT_Simulation_in_Super_Win_the_Game.php][Super Win The Game]]


* todo details
** DONE <<undo/redo in editor should clarify which bump allocator is being used>>
   <2020-08-07 Fri>
   maybe tie in the level's bump allocator to the editor system, otherwise we'll be using the permanent storage for the editor without a chance of reclaiming the memory
   <2020-08-10 Mon>
   extra function "editor_changed_level" called

* design decisions

** why isn't the editor part of the game struct
   <2020-08-10 Mon>
   this would mean the host would need to be aware of all the nuklear structs
   the same defines would be required before includeing nuklear.h
   as I'm using my own malloc/free, these would also need to be specified in the host

   it's much simpler to just keep the editor_struct as a static that's purely on the guest side
